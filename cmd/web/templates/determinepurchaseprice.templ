package templates

import (
"golang.org/x/text/message"
"golang.org/x/text/language"
"strings"
"github.com/hculpan/travtools/pkg/entities"
)

var p = message.NewPrinter(language.English)

templ DeterminePurchasePrice(tradeGoods entities.TradeGoods) {
<div class="container">
    <div class="row dflex justify-content-between">
        <h3 class="col-6">Step 3: Purchase Price</h3>
        <button id="download-csv" class="btn btn-outline-primary col-1"><svg xmlns="http://www.w3.org/2000/svg"
                width="16" height="16" fill="currentColor" class="bi bi-download" viewBox="0 0 16 16">
                <path
                    d="M.5 9.9a.5.5 0 0 1 .5.5v2.5a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1v-2.5a.5.5 0 0 1 1 0v2.5a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2v-2.5a.5.5 0 0 1 .5-.5" />
                <path
                    d="M7.646 11.854a.5.5 0 0 0 .708 0l3-3a.5.5 0 0 0-.708-.708L8.5 10.293V1.5a.5.5 0 0 0-1 0v8.793L5.354 8.146a.5.5 0 1 0-.708.708z" />
            </svg> CSV</button>
    </div>
    <div class="row dflex justify-content-center">
        <table class="table table-dark table-striped" id="data-table">
            <thead>
                <tr>
                    <th scope="col-2" style="max-width: 75px;">Black Market</th>
                    <th scope="col">Type</th>
                    <th scope="col">Available</th>
                    <th scope="col">Base Price</th>
                    <th scope="col">Purchase Price</th>
                    <th scope="col">Added For</th>
                </tr>
            </thead>
            <tbody>
                for _, tg := range tradeGoods {
                <tr>
                    <th>
                        if tg.IsIllegal() {
                        <bold>*</bold>
                        }
                    </th>
                    <th>{ tg.Type }</th>
                    <th>{ p.Sprintf("%v", tg.AvailableTons) }</th>
                    <th>{ p.Sprintf("%v", tg.BasePrice) }</th>
                    <th>{ p.Sprintf("%v", tg.PurchasePrice) }</th>
                    <th>{ strings.Join(tg.ReasonAdded, ", ") }</th>
                </tr>
                }
            </tbody>
        </table>
    </div>

    <div class="row dflex justify-content-center">
        <a href="/" class="btn btn-primary col-4">Done</a>
    </div>
</div>

<script>
    document.getElementById("download-csv").addEventListener("click", function () {
        const table = document.getElementById("data-table");
        const rows = table.querySelectorAll("tr");
        let csvContent = "";

        rows.forEach(function (row) {
            const cells = row.querySelectorAll("th, td");
            let rowContent = [];
            cells.forEach(function (cell) {
                let cellText = cell.textContent;
                // Escape double quotes by replacing them with two double quotes
                cellText = cellText.replace(/"/g, '""');
                // Surround the cell text with double quotes and push to rowContent
                rowContent.push(`"${cellText}"`);
            });
            csvContent += rowContent.join(",") + "\n";
        });

        const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
        const link = document.createElement("a");
        const url = URL.createObjectURL(blob);
        link.setAttribute("href", url);
        link.setAttribute("download", "purchase-data.csv");
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    });
</script>
}