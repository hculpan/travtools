package templates

import (
"github.com/hculpan/travtools/pkg/entities"
)

templ PickToSell(tradeGoods entities.TradeGoods, population string, tradeCodes string, brokerSkill string) {
<div class="container">
    <div class="row dflex justify-content-between">
        <h3 class="col-6">Step 3: Pick Trade Goods to Sell</h3>
    </div>
    <div class="row dflex justify-content-center">
        <form hx-get="/spec-trade-sell" hx-target="#content" hx-swap="innerHTML">
            <input type="text" id="step" name="step" value="4" hidden />
            <input type="text" id="population" name="population" value={population} hidden />
            <input type="text" id="trade" name="trade" value={tradeCodes} hidden />
            <input type="text" id="broker" name="broker" value={brokerSkill} hidden />
            <table class="table table-dark table-striped" id="data-table">
                <thead>
                    <tr>
                        <th scope="col-1 dflex justify-content-center" style="max-width: 50px;">Sell</th>
                        <th scope="col">Type</th>
                        <th scope="col">Base Price</th>
                    </tr>
                </thead>
                <tbody>
                    for _, tg := range tradeGoods {
                    <tr>
                        <th class="col-1 dflex justify-content-center">
                            <input class="form-check-input" type="checkbox" value={tg.Id} id={tg.Id} name={tg.Id} />
                        </th>
                        if tg.IsIllegal() {
                        <th class="text-danger">{ tg.Type }</th>
                        } else {
                        <th>{ tg.Type }</th>
                        }
                        <th>{ p.Sprintf("%v", tg.BasePrice) }</th>
                    </tr>
                    }
                </tbody>
            </table>
            <button class="btn btn-primary me-2 col-2" type="submit">Next</button>
        </form>
    </div>
</div>

<script>
    document.getElementById("download-csv").addEventListener("click", function () {
        const table = document.getElementById("data-table");
        const rows = table.querySelectorAll("tr");
        let csvContent = "";

        rows.forEach(function (row) {
            const cells = row.querySelectorAll("th, td");
            let rowContent = [];
            cells.forEach(function (cell) {
                let cellText = cell.textContent;
                // Escape double quotes by replacing them with two double quotes
                cellText = cellText.replace(/"/g, '""');
                // Surround the cell text with double quotes and push to rowContent
                rowContent.push(`"${cellText}"`);
            });
            csvContent += rowContent.join(",") + "\n";
        });

        const blob = new Blob([csvContent], { type: "text/csv;charset=utf-8;" });
        const link = document.createElement("a");
        const url = URL.createObjectURL(blob);
        link.setAttribute("href", url);
        link.setAttribute("download", "purchase-data.csv");
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    });
</script>
}
/*
package templates

templ DetermineSalePrice() {
<div class="container">
    <h1>Step 2: Determine Sale Price!</h1>
    <a href="/" class="btn btn-primary">Done</a>
</div>
}
*/